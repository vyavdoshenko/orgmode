#+TITLE: zshrc configuration file
#+PROPERTY: header-args :tangle ~/.zshrc

* Table of contents :toc:
- [[#environment-variables][Environment variables]]
- [[#setting-up-brew-environment][Setting up brew environment]]
- [[#setting-up-path-environment-variable][Setting up PATH environment variable]]
- [[#setting-up-installed-libraries][Setting up installed libraries]]
- [[#setting-other-paths][Setting other paths]]
- [[#setting-up-oh-my-zsh-environment-variables][Setting up oh-my-zsh environment variables]]
- [[#plugins][Plugins]]
- [[#sourcing-oh-my-zsh-after-all-obligated-staff][Sourcing oh-my-zsh after all obligated staff]]
- [[#preferred-viewer-and-editor][Preferred viewer and editor]]
- [[#aliases][Aliases]]
- [[#iterm2-titles][iTerm2 titles]]

* Environment variables

- Setting up path to your oh-my-zsh installation.
- Setting up xterm colors.
- Setting up my language environment.
- Make CMake use colors

#+BEGIN_SRC sh
export ZSH="${HOME}/.oh-my-zsh"
export LANG=en_US.UTF-8
if [[ "$(uname)" == "Linux" ]]; then
  export TERM=xterm-256color
fi
export CLICOLOR_FORCE=1
#+END_SRC

* Setting up brew environment

#+BEGIN_SRC sh
if [[ "$(uname)" == "Linux" ]]; then
#  export BREW_PREFIX=/home/linuxbrew/.linuxbrew
elif [[ "$(arch)" == "i386" ]]; then
  export BREW_PREFIX=/usr/local;
else
  export BREW_PREFIX=/opt/homebrew;
fi

function add_bin {
  export PATH="${BREW_PREFIX}/opt/$1/bin:${PATH}"
}

function add_sbin {
  export PATH="${BREW_PREFIX}/opt/$1/sbin:${PATH}"
}

function add_dev_paths {
  export LDFLAGS="-L${BREW_PREFIX}/opt/$1/lib ${LDFLAGS}"
  export CPPFLAGS="-I${BREW_PREFIX}/opt/$1/include ${CPPFLAGS}"
}

function add_pkg_path {
  export PKG_CONFIG_PATH="${BREW_PREFIX}/opt/$1/lib/pkgconfig:${PKG_CONFIG_PATH}"
}

if [[ "$(uname)" == "Darwin" ]]; then
  eval "$(${BREW_PREFIX}/bin/brew shellenv)"
fi
#+END_SRC

* Setting up PATH environment variable

#+BEGIN_SRC sh
if [[ "$(uname)" == "Linux" ]]; then
  export PATH="${HOME}/.local/bin:${PATH}"
  source ${HOME}/.zprofile
else
  export PATH="/Applications/Sublime Merge.app/Contents/SharedSupport/bin:${PATH}"
  export PATH="/Applications/Sublime Text.app/Contents/SharedSupport/bin:${PATH}"
  # pip
  export PATH="${BREW_PREFIX}/opt/python@3/Frameworks/Python.framework/Versions/Current/bin:${PATH}"
  # python3 userbase
  USER_BASE_BIN=$(python3 -m site --user-base)/bin
  export PATH="${USER_BASE_BIN}:${PATH}"
  # gnubin
  for d in ${BREW_PREFIX}/opt/*/libexec/gnubin; do export PATH=$d:${PATH}; done

  export PATH="${HOME}/Library/Application Support/Coursier/bin:${PATH}"
fi
#+END_SRC

* Setting up installed libraries

#+BEGIN_SRC sh
if [[ "$(uname)" == "Darwin" ]]; then
  add_bin curl
  add_bin llvm
  add_bin ffmpeg@4
  add_bin qt5
  add_dev_paths libgccjit

  export LDFLAGS="-L${BREW_PREFIX}/opt/llvm/lib -Wl,-rpath,${BREW_PREFIX}/opt/llvm/lib ${LDFLAGS}"
  export CPPFLAGS="-I${BREW_PREFIX}/opt/llvm/include -I${BREW_PREFIX}/opt/llvm/include/c++/v1/ ${CPPFLAGS}"

  export CC=${BREW_PREFIX}/opt/llvm/bin/clang
  export CXX=${CC}++
  export AR=${BREW_PREFIX}/opt/llvm/bin/llvm-ar
fi

#+END_SRC

* Setting other paths
#+BEGIN_SRC sh
# local bin path
export PATH="${HOME}/.local/bin:${PATH}"

# doom bin path
if [[ "$(uname)" == "Linux" ]]; then
  export PATH="${HOME}/.config/emacs/bin:${PATH}"
else
  export PATH="${HOME}/.emacs.d/bin:${PATH}"
fi
#+END_SRC

* Setting up oh-my-zsh environment variables

Set name of the theme to load --- if set to "random", it will
load a random theme each time oh-my-zsh is loaded, in which case,
to know which specific one was loaded, run: echo $RANDOM_THEME
See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#+BEGIN_SRC sh
ZSH_THEME="robbyrussell"
#+END_SRC

Set list of themes to pick from when loading at random
Setting this variable when ZSH_THEME=random will cause zsh to load
a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
If set to an empty array, this variable will have no effect.
#+BEGIN_SRC sh
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
#+END_SRC

Uncomment the following line to use case-sensitive completion.
#+BEGIN_SRC sh
CASE_SENSITIVE="true"
#+END_SRC

Uncomment the following line to use hyphen-insensitive completion.
Case-sensitive completion must be off. _ and - will be interchangeable.
#+BEGIN_SRC sh
# HYPHEN_INSENSITIVE="true"
#+END_SRC

Uncomment the following line to disable bi-weekly auto-update checks.
#+BEGIN_SRC sh
# DISABLE_AUTO_UPDATE="true"
#+END_SRC

Uncomment the following line to automatically update without prompting.
#+BEGIN_SRC sh
# DISABLE_UPDATE_PROMPT="true"
#+END_SRC

Uncomment the following line to change how often to auto-update (in days).
#+BEGIN_SRC sh
# export UPDATE_ZSH_DAYS=13
#+END_SRC

Uncomment the following line if pasting URLs and other text is messed up.
#+BEGIN_SRC sh
# DISABLE_MAGIC_FUNCTIONS=true
#+END_SRC

Uncomment the following line to disable colors in ls.
#+BEGIN_SRC sh
# DISABLE_LS_COLORS="true"
#+END_SRC

Uncomment the following line to disable auto-setting terminal title.
#+BEGIN_SRC sh
# DISABLE_AUTO_TITLE="true"
#+END_SRC

Uncomment the following line to enable command auto-correction.
#+BEGIN_SRC sh
# ENABLE_CORRECTION="true"
#+END_SRC

Uncomment the following line to display red dots whilst waiting for completion.

#+BEGIN_SRC sh
# COMPLETION_WAITING_DOTS="true"
#+END_SRC

Uncomment the following line if you want to disable marking untracked files
under VCS as dirty. This makes repository status check for large repositories
much, much faster.
#+BEGIN_SRC sh
# DISABLE_UNTRACKED_FILES_DIRTY="true"
#+END_SRC

Uncomment the following line if you want to change the command execution time
stamp shown in the history command output.
You can set one of the optional three formats:
"mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
or set a custom format using the strftime function format specifications,
see 'man strftime' for details.
#+BEGIN_SRC sh
# HIST_STAMPS="mm/dd/yyyy"
#+END_SRC

Would you like to use another custom folder than ${ZSH}/custom?
#+BEGIN_SRC sh
# ZSH_CUSTOM=/path/to/new-custom-folder
#+END_SRC

* Plugins
Which plugins would you like to load?
Standard plugins can be found in ~/.oh-my-zsh/plugins/*
Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
Example format: plugins=(rails git textmate ruby lighthouse)
Add wisely, as too many plugins slow down shell startup.
#+BEGIN_SRC sh
plugins=(git
         zsh-interactive-cd
         vi-mode
         alias-finder
         command-not-found
         extract
         fd
         ripgrep
         rust
         history-substring-search
         zsh-syntax-highlighting
         zsh-autosuggestions
         )
#+END_SRC

* Sourcing oh-my-zsh after all obligated staff
#+BEGIN_SRC sh
source ${ZSH}/oh-my-zsh.sh
#+END_SRC

* Preferred viewer and editor
#+BEGIN_SRC sh
export EDITOR='nvim'
export VIEWER='nvim'
#+END_SRC

* Aliases
Set personal aliases, overriding those provided by oh-my-zsh libs,
plugins, and themes. Aliases can be placed here, though oh-my-zsh
users are encouraged to define aliases within the ZSH_CUSTOM folder.
For a full list of active aliases, run `alias`.
#+BEGIN_SRC sh
alias zshconfig="${EDITOR} ~/.zshrc"
alias ohmyzsh="${EDITOR} ~/.oh-my-zsh"
alias vimconfig="${EDITOR} ~/.vim/vimrc"

if [[ "$(uname)" == "Linux" ]]; then
  alias kittyconfig="${EDITOR} ~/.config/kitty/kitty.conf"
  alias watch_gpu="watch -n0.5 'nvidia-settings -q GPUUtilization -q useddedicatedgpumemory'"
  alias watch_nvidia-smi="watch -n 0.5 nvidia-smi"
fi

source ${HOME}/condarc

alias pip=pip3
alias docker_bootstrap="docker container stop \$(docker container ls -aq); docker container rm \$(docker container ls -aq); docker volume rm \$(docker volume ls -q)"
alias docker_remove_images="docker rmi \$(docker images -q)"
#+END_SRC

* iTerm2 titles
#+BEGIN_SRC sh
DISABLE_AUTO_TITLE="true"
tab_title() {
  echo -ne "\e]1;$(arch)\a"
}
add-zsh-hook precmd tab_title
#+END_SRC
